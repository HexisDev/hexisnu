// This is a manifest file that'll be compiled into application.js, which will include all the files
// listed below.
//
// Any JavaScript/Coffee file within this directory, lib/assets/javascripts, vendor/assets/javascripts,
// or any plugin's vendor/assets/javascripts directory can be referenced here using a relative path.
//
// It's not advisable to add code directly here, but if you do, it'll appear at the bottom of the
// compiled file.
//
// Read Sprockets README (https://github.com/sstephenson/sprockets#sprockets-directives) for details
// about supported directives.
//
//= require jquery
//= require jquery_ujs
//= require turbolinks
//= require bootstrap
//= require_tree .
//= require nested_form_fields

function renderSeatmap(ctx){
  //Render base canvas
  ctx.beginPath();
  ctx.rect(0, 0, 600, 300);
  ctx.fillStyle = 'white';
  ctx.fill();
  ctx.lineWidth = 2;
  ctx.strokeStyle = 'black';
  ctx.stroke();

  //Render all seats
  for(i = 0; i < rows.length; i++){
    console.log(rows[i].name + " " + rows[i].x_coord + ":" + rows[i].y_coord);
    for(j = 0; j < seats[i].length; j++){
      console.log(seats[i][j].number);
      ctx.beginPath();
      x = j < Math.floor(seats[i].length/2) ? rows[i].x_coord : rows[i].x_coord + 10;
      y = j < Math.floor(seats[i].length/2) ? rows[i].y_coord + seats[i][j].number * 10 : rows[i].y_coord + seats[i][j].number * 10 - Math.floor(seats[i].length/2)*10;
      ctx.rect(x, y, 8, 8);
      if(seats[i][j].state == "available"){
        ctx.fillStyle = 'green';
      }else{
        ctx.fillStyle = 'red';
      }
      ctx.fill();
    }
  }
}

function initSeatmap(){
  seats = gon.seats;
  rows = gon.rows;

  var canvas = document.getElementById('smCanvas');
  var ctx = canvas.getContext('2d');

  renderSeatmap(ctx);
  canvas.addEventListener('mousemove', function(evt) {
    renderSeatmap(ctx);
    var mousePos = getMousePos(canvas, evt);
    var message = 'Mouse position: ' + mousePos.x + ',' + mousePos.y;
    printText(canvas, message, mousePos.x, mousePos.y);
  }, false);
}

function getMousePos(canvas, evt) {
  var rect = canvas.getBoundingClientRect();
  return {
    x: evt.clientX - rect.left,
    y: evt.clientY - rect.top
  };
}

function printText(canvas, message, x, y) {
  var ctx = canvas.getContext('2d');
  ctx.font = '18pt Calibri';
  ctx.fillStyle = 'black';
  ctx.fillText(message, x, y);
}

$(document).ready(initSeatmap);
$(document).on('page:load', initSeatmap);
